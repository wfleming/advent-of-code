require "minitest/autorun"

require "d12"

SAMPLE_INPUT = File.read("sample_input.txt")

describe Pots do
  it "parses" do
    pots = Pots.parse(SAMPLE_INPUT)

    pots.state.to_s.must_equal "#..#.#..##......###...###"
    pots.rules["...##"].must_equal "#"
    pots.rules.count.must_equal 14
  end

  it "steps a single generation" do
    pots = Pots.parse(SAMPLE_INPUT)

    expected_states = <<~STR.lines.map(&:strip)
    0: ...#..#.#..##......###...###...........
    1: ...#...#....#.....#..#..#..#...........
    2: ...##..##...##....#..#..#..##..........
    3: ..#.#...#..#.#....#..#..#...#..........
    4: ...#.#..#...#.#...#..#..##..##.........
    5: ....#...##...#.#..#..#...#...#.........
    6: ....##.#.#....#...#..##..##..##........
    7: ...#..###.#...##..#...#...#...#........
    8: ...#....##.#.#.#..##..##..##..##.......
    9: ...##..#..#####....#...#...#...#.......
    10: ..#.#..#...#.##....##..##..##..##......
    11: ...#...##...#.#...#.#...#...#...#......
    12: ...##.#.#....#.#...#.#..##..##..##.....
    13: ..#..###.#....#.#...#....#...#...#.....
    14: ..#....##.#....#.#..##...##..##..##....
    15: ..##..#..#.#....#....#..#.#...#...#....
    16: .#.#..#...#.#...##...#...#.#..##..##...
    17: ..#...##...#.#.#.#...##...#....#...#...
    18: ..##.#.#....#####.#.#.#...##...##..##..
    19: .#..###.#..#.#.#######.#.#.#..#.#...#..
    20: .#....##....#####...#######....#.#..##.
    STR

    expected_states.each do |expected_state|
      pots.to_s.must_equal expected_state
      pots.step
    end
  end
end

describe "p1" do
  it "runs 20 gens and sums" do
    pots = Pots.parse(SAMPLE_INPUT)

    p1(pots).must_equal 325

    pots.state.to_s(-3..35).must_equal(".#....##....#####...#######....#.#..##.")
  end
end
