#ip 5
addi 5 16 5   # 0: jmp to 17 (addi 3 2 3)
seti 1 8 2    # 1: r2 = 1   looks like these will be counters
seti 1 1 1    # 2: r1 = 1
mulr 2 1 4    # 3: r4 = r2 * r1
eqrr 4 3 4    # 4: if (r4 == r3) ...
addr 4 5 5    # 5: skip next line if r4 == r3 before
addi 5 1 5    # 6: skip next line if r4 != r3 before
addr 2 0 0    # 7: if r3 == r4: r0 = r2 + r0
addi 1 1 1    # 8: else (r3 != r4): r1 = r1 + 1
gtrr 1 3 4    # 9: if r1 > r3...
addr 5 4 5    # 10: skip next line if r1 > r3 before
seti 2 8 5    # 11: else (r1 <= r3): r5 = r2 + 8 (jmp to ...?)
addi 2 1 2    # 12: if r1 > 32: r2 = r2 + 1 (loop counter)
gtrr 2 3 4    # 13: if r2 > r3 ...
addr 4 5 5    # 14: skip next line if r2 > r3 before ...
seti 1 7 5    # 15: else (r2 <= r3): r5 = r1 + 7 (jmp to ...?
mulr 5 5 5    # 16: if r2 > r3: r5 = r5 * r5 (halt)
addi 3 2 3    # 17: r3 = r3 + 2
mulr 3 3 3    # 18: r3 = r3 * r3
mulr 5 3 3    # 19: r3 = 19 * r3 (r5 is ip, so always 19 here)
muli 3 11 3   # 20: r3 = r3 * 11
addi 4 6 4    # 21: r4 = r4 + 6
mulr 4 5 4    # 22: r4 = r4 * 22 (again, r5 must equal 22 here)
addi 4 5 4    # 23: r4 = r4 + 5
addr 3 4 3    # 24: r3 = r3 + r4
addr 5 0 5    # 25: r5 = r5 + r0 (jmp since r5 is ip, r0 starts = 1, skips next line)
seti 0 0 5    # 26: jmp to 1 if r0 was 0
setr 5 3 4    # 27: r4 = 27  up to 35 makes r4 and r3 much bigger and only runs when r0 started = 1
mulr 4 5 4    # 28: r4 = r4 * r5 (27 * 28 = 756)
addr 5 4 4    # 29: r4 = r5 + r4 = 29 + 756 = 785
mulr 5 4 4    # 30: r4 = r5 * r4 = 30 * 785 = 23350
muli 4 14 4   # 31: r4 = r4 * 14 = 329700
mulr 4 5 4    # 32: r4 = r4 * r5 = 329700 * 32 = 10550400
addr 3 4 3    # 33: r3 = r3 + r4
seti 0 3 0    # 34: r0 = 0
seti 0 0 5    # 35: jmp to 1
